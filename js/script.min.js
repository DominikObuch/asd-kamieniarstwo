"use strict";

document.addEventListener("DOMContentLoaded", function () {
  if (document.getElementById("vid") != undefined) {
    document.getElementById('vid').play();
  }
});

for (var i = 0; i < document.getElementsByClassName("link-smooth").length; i++) {
  document.getElementsByClassName("link-smooth")[i].addEventListener('click', function (e) {
    e.preventDefault();
    document.querySelector(this.getAttribute('href')).scrollIntoView({
      behavior: 'smooth'
    });
  });
}

document.getElementById("hamburger").addEventListener("click", function () {
  for (var _i = 0; _i < document.getElementsByClassName("hamburger").length; _i++) {
    document.getElementsByClassName("hamburger")[_i].classList.toggle("hamburger__expanded");
  }
});
var lazyImageEl = document.getElementsByClassName("lazy-image");
var lazyLoadingEl = document.getElementsByClassName("lazy-loading");

var lazyLoadingAnim = function lazyLoadingAnim(el) {
  for (var _i2 = 0; _i2 < el.length; _i2++) {
    if (el[_i2].offsetTop <= window.innerHeight + window.scrollY) {
      el[_i2].classList.add("lazy-loaded");
    }
  }
};

var lazyLoadingImg = function lazyLoadingImg(imgEl, contEl) {
  for (var _i3 = 0; _i3 < lazyLoadingEl.length; _i3++) {
    if (imgEl[_i3] != undefined) {
      if (contEl[_i3].offsetTop - 50 <= window.innerHeight + window.scrollY) {
        imgEl[_i3].src = imgEl[_i3].dataset.src;
      }
    }
  }
};

var scroll = function scroll() {
  lazyLoadingAnim(lazyLoadingEl);
  lazyLoadingImg(lazyImageEl, lazyLoadingEl);
};

var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame;
var $window = $(window);
var lastScrollTop = $window.scrollTop();

if (raf) {
  loop();
}

function loop() {
  var scrollTop = $window.scrollTop();

  if (lastScrollTop === scrollTop) {
    raf(loop);
    return;
  } else {
    lastScrollTop = scrollTop;
    scroll();
    raf(loop);
  }
}

document.addEventListener("DOMContentLoaded", function () {
  lazyLoadingAnim(lazyLoadingEl);
  lazyLoadingImg(lazyImageEl, lazyLoadingEl);
});
var prom = new Promise(function (resolve, reject) {
  var xhr = new XMLHttpRequest();
  var url = window.location.pathname;
  var filename = url.substring(url.lastIndexOf('/') + 1);
  filename = filename.substr(0, filename.length - 5); //remove ".html" from it 

   
  xhr.open("GET", "".concat(window.location.href.substring(0, window.location.href.lastIndexOf("/")), "/js/dataJSON/").concat(filename, ".json"), true);
  xhr.addEventListener('load', function () {
    resolve(this.response);
  });
  xhr.send();
});
prom.then(function (value) {
  var response = JSON.parse(value);
  pages.data = response.data;
  pages.overwriteCurrent();
}); //if in the future u will read it, just know I didn't know how the sql and any back-end language works and the customer didn't like cms so i had to do it like that :/ 

var pages = {
  lastShown: 0,
  currentShown: null,
  currentPage: 1,
  articleEl: [//there are all the dom nodes I will change
  document.getElementsByClassName("products__heading"), document.getElementsByClassName("d-category"), document.getElementsByClassName("d-granite"), document.getElementsByClassName("d-width"), document.getElementsByClassName("d-height"), document.getElementsByClassName("d-price"), document.getElementsByClassName("products__image")],
  scrollTop: function scrollTop() {
    document.getElementById("scroll-top").scrollIntoView({
      behavior: 'smooth'
    });
  },
  containersEl: document.getElementsByClassName("products__card"),
  overwriteCurrent: function overwriteCurrent() {
    var i = 0;

    for (this.currentShown = this.lastShown; this.currentShown < this.containersEl.length + this.lastShown; this.currentShown++) {
      //this one for current article 
      for (var x = 0; x < this.articleEl.length; x++) {
        //this one for specyfic property
        if (this.data[this.currentShown] == undefined) {
          this.containersEl[i].classList.add("d-none");
        } else if (this.articleEl[x][i] != undefined) {
          this.articleEl[x][i].textContent = this.data[this.currentShown][x];
        }
      } // another one for image changing


      if (this.data[this.currentShown] !== undefined) {
        this.articleEl[6][i].src = this.data[this.currentShown][6];
      }

      i++;
    }
  }
};

function animSwitchSite(i) {
  for (var _i4 = 0; _i4 < document.getElementsByClassName("products__card").length; _i4++) {
    document.getElementsByClassName("products__card")[_i4].classList.add("reload-page");
  }

  pages.scrollTop();

  for (var _i5 = 0; _i5 < document.getElementsByClassName("products__card").length; _i5++) {
    document.getElementsByClassName("products__card")[_i5].addEventListener("animationend", function () {
      this.classList.remove("reload-page");
    });
  }
}

$(function () {
  (function (name) {
    var container = $('#pagination-' + name);

    var sources = function () {
      var result = [];

      for (var _i6 = 1; _i6 <= Math.ceil(pages.data.length / 9); _i6++) {
        result.push(_i6);
      }

      return result;
    }();

    var options = {
      dataSource: sources,
      ulClassName: "products__list-point",
      pageSize: 1,
      autoHidePrevious: true,
      autoHideNext: true,
      callback: function callback(response, pagination) {
        amount = pagination.pageNumber - pages.currentPage;
        animSwitchSite();

        if (pages.lastShown + pages.containersEl.length <= pages.data.length) {
          //checks if there are still some articles
          pages.lastShown += pages.containersEl.length * amount; // adds pages 

          for (var _i7 = 0; _i7 < pages.containersEl.length; _i7++) {
            // shows the unseen articles 
            pages.containersEl[_i7].classList.remove("d-none");
          }

          pages.currentPage += amount;
          pages.overwriteCurrent();
        }
      }
    };
    container.pagination(options);
  })('cont');
});
document.getElementById("vid").addEventListener("loadeddata", function () {
  for (var _i8 = 0; _i8 < document.getElementsByClassName("menu__list-cont").length; _i8++) {
    document.getElementsByClassName("menu__list-cont")[_i8].classList.remove("zero-opacity");
  }
});
var menu = {
  isShowed: false,
  childNumber: null,
  currentElShow: undefined,
  toggle: function toggle() {
    this.isShowed = !this.isShowed;
    document.getElementsByClassName("menu__list-cont")[this.childNumber].classList.toggle("menu__show");
  },
  secondClicked: function secondClicked() {
    if (this.target !== document.getElementsByClassName("menu__list-cont")[menu.childNumber]) {
      menu.toggle();
    }
  },
  clicked: function clicked() {
    if (this.isShowed) {
      document.getElementsByClassName("menu__show")[0].addEventListener("transitionend", menu.secondClicked);

      if (menu.isShowed) {
        menu.isShowed = !menu.isShowed;
        document.getElementsByClassName("menu__show")[0].classList.remove("menu__show");
      }
    } else {
      this.toggle();
    }
  }
};

var _loop = function _loop(_i9) {
  document.getElementsByClassName("menu")[_i9].addEventListener("click", function (e) {
    menu.childNumber = _i9;
    menu.currentElShow = e.target;
    menu.clicked();
    document.getElementsByClassName("menu__list-cont")[menu.childNumber].removeEventListener("transitionend", menu.secondClicked);
  });
};

for (var _i9 = 0; _i9 < document.getElementsByClassName("menu").length; _i9++) {
  _loop(_i9);
} // let graniteEl = document.getElementsByClassName("d-granite");
// let widthEl = document.getElementsByClassName("d-width");
// let heightEl = document.getElementsByClassName("d-height");
// let priceEl = document.getElementsByClassName("d-price");
// let articlesEl = document.getElementsByClassName("products__card");
// let sortByType;
// let table = [];
// let comparator = {
//     increasing(a, b) {
//         if (+a[0] == +b[0]) {
//             return 0;
//         } else {
//             return (+a[0] < +b[0]) ? -1 : 1;
//         }
//     },
//     decresing(a, b) {
//         if (+b[0] == +a[0]) {
//             return 0;
//         } else {
//             return (+b[0] < +a[0]) ? -1 : 1;
//         }
//     },
//     alphabetically(a, b) {
//         if (a[0] == b[0]) {
//             return 0;
//         } else {
//             return (b[0] > a[0]) ? -1 : 1;
//         }
//     }
// }
// let sorting = {
//     list: [...document.getElementsByClassName("menu__list-point--sort")],
//     comparingSequence: [comparator.increasing, comparator.decresing, comparator.alphabetically, comparator.increasing, comparator.decresing, comparator.increasing, comparator.decresing],
//     sortTypeSequence: [priceEl, priceEl, graniteEl, widthEl, widthEl, heightEl, heightEl],
// }
// for (let x = 0; x < sorting.list.length; x++) {
//     sorting.list[x].addEventListener("click", function () {
//         menu.toggle();
//         for (let i = 0; i < articlesEl.length; i++) {
//             table[i] = [sorting.sortTypeSequence[x][i].textContent, articlesEl[i]];
//         }
//         table.sort(sorting.comparingSequence[x]);
//         for (let i = 0; i < table.length; i++) {
//             table[i][1].classList.add("fadeOutIn");
//             table[i][1].style.order = `${i}`;
//         }
//         lazyLoadingAnim(lazyLoadingEl);
//         lazyLoadingImg(lazyImageEl, lazyLoadingEl);
//     })
// }
// for (let i = 0; i < articlesEl.length; i++) {
//     articlesEl[i].addEventListener("animationend", function () {
//         table[i][1].classList.remove("fadeOutIn");
//     })
// }


var zoomed = {
  images: document.getElementsByClassName("products__image"),
  appearZoom: function appearZoom(el) {
    console.log(this);
    this.currentImgSrc = el.target.src;
    this.zoomEl.childNodes[1].childNodes[1].src = this.currentImgSrc;
    this.zoomEl.classList.remove("no-zoom");
  },
  disappearZoom: function disappearZoom(el) {
    if (el.target !== document.getElementsByClassName("zoomed__image")[0]) {
      this.zoomEl.classList.add("no-zoom");
    }
  },
  currentImgSrc: null,
  zoomEl: document.getElementById("zoomEl")
};

for (var _i10 = 0; _i10 < zoomed.images.length; _i10++) {
  zoomed.images[_i10].addEventListener("click", function (el) {
    zoomed.appearZoom(el);
  });
}

zoomed.zoomEl.addEventListener("click", function (el) {
  zoomed.disappearZoom(el);
});