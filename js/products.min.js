let prom = new Promise(function (resolve, reject) {

    let xhr = new XMLHttpRequest();
    var url = window.location.pathname;
    var filename = url.substring(url.lastIndexOf('/') + 1);
    filename = filename.substr(0, filename.length - 5) //remove ".html" from it 
    let fullurl = window.location.href.substring(0, window.location.href.lastIndexOf("/"))
    fullurl = fullurl.substring(0, fullurl.lastIndexOf("/"))
    fullurl = `${fullurl}/js/dataJSON/${filename}.json`
    xhr.open("GET", fullurl, true);

    xhr.addEventListener('load', function () {
        resolve(this.response)
    })
    xhr.send();
})
prom.then(function (value) {
    let response = JSON.parse(value);
    pages.data = response.data;
    pages.imageSrc = response.src;
    pages.letterNumber = response.letterNumber;
    let name = 'cont'
    var container = $('#pagination-' + name);
    var sources = function () {

        var result = [];
        for (let i = 1; i <= Math.ceil(pages.data.length / pages.articleEl[0].length); i++) {
            result.push(i)
        }
        return result;
    }();
    var options = {
        dataSource: sources,
        ulClassName: "products__list-point",
        pageSize: 1,
        autoHidePrevious: true,
        autoHideNext: true,
        callback: function (response, pagination) {
            let amount = pagination.pageNumber - pages.currentPage;
            animSwitchSite();

            if (pages.lastShown + pages.containersEl.length - pages.articleEl[0].length <= pages.data.length) { //checks if there are still some articles
                pages.lastShown += pages.containersEl.length * amount; // adds pages 

                pages.currentPage += amount;
                setTimeout(() => {
                    pages.overwriteCurrent();
                }, 200);
            }
        }
    };
    container.pagination(options);


})
//if in the future u will read it, just know I didn't know how the sql and any back-end language works and the customer didn't like cms so i had to do it like that :/ 
let pages = {
    lastShown: 0,
    currentShown: null,
    currentPage: 1,
    articleEl: [ //there are all the dom nodes I will change
        document.getElementsByClassName("products__heading"),
        document.getElementsByClassName("d-category"),
        document.getElementsByClassName("d-price"),
        document.getElementsByClassName("products__image"),
    ],

    scrollTop() {
        document.getElementById("scroll-top").scrollIntoView({
            behavior: 'smooth'
        })
    },

    containersEl: document.getElementsByClassName("products__card"),

    overwriteCurrent() {
        let i = 0;

        for (this.currentShown = this.lastShown; this.currentShown < this.containersEl.length + this.lastShown; this.currentShown++) { //this one for current article 
            if (this.data[this.currentShown] !== undefined) { //  image changing
                this.articleEl[3][i].src = `${this.imageSrc}${pages.lastShown+i+1}.jpg`   
            }

            for (let x = 0; x < this.articleEl.length; x++) { //this one for specyfic property
                if (this.data[this.currentShown] == undefined) {
                    this.containersEl[i].classList.add("d-none");

                } else if (this.containersEl[i].classList.contains("d-none")) {
                    this.containersEl[i].classList.remove("d-none");
                    this.articleEl[x][i].textContent = this.data[this.currentShown][x];
                } else if (this.articleEl[x][i] !== undefined) {
                    this.articleEl[x][i].textContent = this.data[this.currentShown][x];

                }
            }
            if (this.data[this.currentShown] !== undefined) { //  letterNumber changing 
                this.articleEl[0][i].textContent += ` ${this.letterNumber+(pages.lastShown+i+1)}`
                
            }


            i++
        }
    }
}


function animSwitchSite(i) {

    for (let i = 0; i < document.getElementsByClassName("products__card").length; i++) {
        document.getElementsByClassName("products__card")[i].classList.add("reload-page");
    }
    pages.scrollTop();


    for (let i = 0; i < document.getElementsByClassName("products__card").length; i++) {
        document.getElementsByClassName("products__card")[i].addEventListener("animationend", function () {
            this.classList.remove("reload-page");
        })
    }
}
document.getElementById("vid").addEventListener("loadeddata", ()=>{
   for(let i = 0; i < document.getElementsByClassName("menu__list-cont").length; i++){
       document.getElementsByClassName("menu__list-cont")[i].classList.remove("zero-opacity")
   }
})
let menu = {
    isShowed: false,
    childNumber: null,
    currentElShow: undefined,
    toggle() {
        this.isShowed = !this.isShowed;
        document.getElementsByClassName("menu__list-cont")[this.childNumber].classList.toggle("menu__show")
    },
    secondClicked() {
        if (this.target !== document.getElementsByClassName("menu__list-cont")[menu.childNumber]) {
            menu.toggle();
        }
    },
    clicked() {
        if (this.isShowed) {
            document.getElementsByClassName("menu__show")[0].addEventListener("transitionend", menu.secondClicked)
            if (menu.isShowed) {
                menu.isShowed = !menu.isShowed;
                document.getElementsByClassName("menu__show")[0].classList.remove("menu__show")
            }
        } else {
            this.toggle()
        }
    }
}
for (let i = 0; i < document.getElementsByClassName("menu").length; i++) {

    document.getElementsByClassName("menu")[i].addEventListener("click", function (e) {
        menu.childNumber = i;
        menu.currentElShow = e.target;
        menu.clicked()
        document.getElementsByClassName("menu__list-cont")[menu.childNumber].removeEventListener("transitionend", menu.secondClicked)

    })
}
// setup for framework easyzoom 
var $easyzoom = $('.easyzoom').easyZoom();
var api = $easyzoom.data('easyZoom');
api.opts.loadingNotice = "ładowanie";
api.opts.errorNotice = "Zdjęcie nie mogło zostać załadowane";
api.opts.linkAttribute = "data-src";

let zoomed = { //an object that represents the zoomed element 
    images: document.getElementsByClassName("products__image"),
    isZoomed: false,
    zoomSrc: document.getElementById("zoomSrc"),
    zoomHeader: document.getElementById("zoomHeader"),

    appearZoom(imgSrc, headingText) {

        this.isZoomed = true;
        let fullSizeSrc = imgSrc.replace("products","fullsize-products");
        this.zoomSrc.src = fullSizeSrc; //change current image src
        this.zoomHeader.textContent = headingText;
   
        this.zoomSrc.parentNode.dataset.src = fullSizeSrc;
        this.zoomEl.classList.remove("no-zoom");
        api.swap();
    },
    disappearZoom(el) {
        if (el.target !== document.getElementsByClassName("zoomed__image")[0]) {
            this.zoomEl.classList.add("no-zoom");
            this.isZoomed = false
            
        }

    },
    zoomEl: document.getElementById("zoomEl"),
}
for (let i = 0; i < zoomed.images.length; i++) {
    zoomed.images[i].addEventListener("click", function (el) {
        zoomed.appearZoom(el.target.src, el.target.nextElementSibling.firstElementChild.textContent, )
    })
}
zoomed.zoomEl.addEventListener("click", function (el) {
    if ((el.target == document.getElementById("zoomEl")) || (el.target.parentNode === document.getElementsByClassName("zoomed__close")[0])) {
        zoomed.disappearZoom(el);
    }
})
//when u press esc and zoom is on then zoom disappear
document.onkeydown = function (evt) {
    evt = evt || window.event;
    if ((evt.keyCode == 27) && (zoomed.isZoomed)) {
        zoomed.disappearZoom(zoomed.zoomEl)
    }
};
let arrowBackEl = document.getElementsByClassName("zoomed__arrow--back")[0];
let arrowForwardEl = document.getElementsByClassName("zoomed__arrow--forward")[0];

let isNotPlayingAnim = true;
let handleArrowBackClick = () => {
    let currentElNb = +(zoomed.zoomHeader.textContent.substring(zoomed.zoomHeader.textContent.lastIndexOf(pages.letterNumber[pages.letterNumber.length-1]) + 1, zoomed.zoomHeader.textContent.length))
    if ((currentElNb != 1 && isNotPlayingAnim)) {
        isNotPlayingAnim = false;
        currentElNb--;
        document.getElementsByClassName("zoomed__cont")[0].classList.add("cont-move-back")
        window.setTimeout(function () {
            zoomed.appearZoom(`${pages.imageSrc+currentElNb}.jpg`, `${pages.data[--currentElNb][0]} ${pages.letterNumber+ (++currentElNb)}`)
        }, 700)
    }
}
let handleArrowForwardClick = () => {
    let currentElNb = +(zoomed.zoomHeader.textContent.substring(zoomed.zoomHeader.textContent.lastIndexOf(pages.letterNumber[pages.letterNumber.length-1]) + 1, zoomed.zoomHeader.textContent.length))
    if ((currentElNb != pages.data.length && isNotPlayingAnim)) {
        isNotPlayingAnim = false;
        currentElNb++;
        document.getElementsByClassName("zoomed__cont")[0].classList.add("cont-move-forward")
        window.setTimeout(function () {

            zoomed.appearZoom(`${pages.imageSrc+currentElNb}.jpg`, `${pages.data[--currentElNb][0]} ${pages.letterNumber+ (++currentElNb)}`)
        }, 700)
    }
}
document.getElementsByClassName("zoomed__cont")[0].addEventListener("animationend", function () {
    document.getElementsByClassName("zoomed__cont")[0].classList.remove("cont-move-forward")
    document.getElementsByClassName("zoomed__cont")[0].classList.remove("cont-move-back")
    isNotPlayingAnim = true;
})
arrowBackEl.addEventListener("click", handleArrowBackClick)
arrowForwardEl.addEventListener("click", handleArrowForwardClick)
//disabling zoom on mobile devices
if ((/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent))) {
    api.teardown()
}



let startX;
let startY;
let endX;
let endY;

//Function to handle swipes
function handleTouch(start, end) {
    //calculate the distance on x-axis and o y-axis. Check wheter had the great moving ratio.
    var xDist = endX - startX;
    let maxDyst = 100;


    if ((/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) && (window.matchMedia("(max-width:765px)").matches)) {

        if (xDist <= -maxDyst) {
            handleArrowForwardClick();
        } else if (xDist >= maxDyst) {
            handleArrowBackClick();
        }
    }

}
document.getElementsByClassName("zoomed__cont")[0].addEventListener('touchstart', function (event) {
    startX = event.touches[0].clientX;
    startY = event.touches[0].clientY;
})
document.getElementsByClassName("zoomed__cont")[0].addEventListener('touchend', function (event) {
    endX = event.changedTouches[0].clientX;
    endY = event.changedTouches[0].clientY;
    handleTouch(startX, endX)
})